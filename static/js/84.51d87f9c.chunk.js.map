{"version":3,"file":"static/js/84.51d87f9c.chunk.js","mappings":"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","sources":["../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","../node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","../node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","../node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","../node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","../node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","../node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","../node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","../node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/init/init.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","../node_modules/@emailjs/browser/es/utils/validateForm/validateForm.js","pages/Contact.js"],"sourcesContent":["export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","import { store } from '../../store/store';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\n/**\n * EmailJS global SDK config\n * @param {object} options - the EmailJS global SDK config options\n * @param {string} origin - the non-default EmailJS origin\n */\nexport const init = (options, origin = 'https://api.emailjs.com') => {\n    if (!options)\n        return;\n    const opts = buildOptions(options);\n    store.publicKey = opts.publicKey;\n    store.blockHeadless = opts.blockHeadless;\n    store.storageProvider = opts.storageProvider;\n    store.blockList = opts.blockList;\n    store.limitRate = opts.limitRate;\n    store.origin = opts.origin || origin;\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = (form) => {\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.4.1');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","export const validateForm = (form) => {\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n    }\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport { motion } from 'framer-motion';\nimport emailjs from '@emailjs/browser';\nimport SEO from '../components/SEO';\n\n// Configuration EmailJS\nconst EMAILJS_SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICE_ID || 'service_nlmh3sw';\nconst EMAILJS_TEMPLATE_ID = process.env.REACT_APP_EMAILJS_TEMPLATE_ID || 'template_bjhq25o';\nconst EMAILJS_PUBLIC_KEY = process.env.REACT_APP_EMAILJS_PUBLIC_KEY || 'jJnNE_qcXzT4AeXnp';\n\nexport default function Contact() {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    subject: '',\n    message: ''\n  });\n  \n  const [errors, setErrors] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n  \n  const [status, setStatus] = useState({\n    submitting: false,\n    success: false,\n    error: false,\n    message: ''\n  });\n  \n  const [submitCount, setSubmitCount] = useState(0);\n  const [lastSubmitTime, setLastSubmitTime] = useState(0);\n  \n  const form = useRef();\n\n  // Nettoyage des données d'entrée pour prévenir les attaques XSS\n  const sanitizeInput = (input) => {\n    if (typeof input !== 'string') return '';\n    return input\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#x27;')\n      .replace(/\\//g, '&#x2F;');\n  };\n\n  const validateForm = () => {\n    let isValid = true;\n    const newErrors = {\n      name: '',\n      email: '',\n      subject: '',\n      message: ''\n    };\n\n    // Rate limiting - Empêcher les soumissions trop fréquentes\n    const now = Date.now();\n    if (now - lastSubmitTime < 10000) { // 10 secondes minimum entre les soumissions\n      setStatus({\n        submitting: false,\n        success: false,\n        error: true,\n        message: 'Veuillez attendre quelques secondes avant de réessayer.'\n      });\n      return false;\n    }\n\n    // Validation du nom avec sécurité renforcée\n    if (!formData.name.trim()) {\n      newErrors.name = 'Le nom est requis';\n      isValid = false;\n    } else if (formData.name.length > 100) {\n      newErrors.name = 'Le nom est trop long (100 caractères maximum)';\n      isValid = false;\n    } else if (!/^[a-zA-ZÀ-ÿ\\s'-]{2,}$/.test(formData.name)) {\n      newErrors.name = 'Le nom contient des caractères non autorisés';\n      isValid = false;\n    }\n\n    // Validation de l'email avec sécurité renforcée\n    if (!formData.email.trim()) {\n      newErrors.email = \"L'email est requis\";\n      isValid = false;\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(formData.email)) {\n      newErrors.email = \"Format d'email invalide\";\n      isValid = false;\n    } else if (formData.email.length > 100) {\n      newErrors.email = \"L'email est trop long (100 caractères maximum)\";\n      isValid = false;\n    }\n\n    // Validation du téléphone (optionnel mais validé si présent)\n    if (formData.phone.trim() && !/^[+]?[0-9\\s-]{8,15}$/.test(formData.phone)) {\n      newErrors.phone = \"Format de numéro de téléphone invalide\";\n      isValid = false;\n    }\n\n    // Validation du sujet\n    if (!formData.subject.trim()) {\n      newErrors.subject = 'Le sujet est requis';\n      isValid = false;\n    } else if (formData.subject.length > 200) {\n      newErrors.subject = 'Le sujet est trop long (200 caractères maximum)';\n      isValid = false;\n    }\n\n    // Validation du message\n    if (!formData.message.trim()) {\n      newErrors.message = 'Le message est requis';\n      isValid = false;\n    } else if (formData.message.length > 5000) {\n      newErrors.message = 'Le message est trop long (5000 caractères maximum)';\n      isValid = false;\n    }\n\n    setErrors(newErrors);\n    return isValid;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n    \n    // Limite le nombre de soumissions à 5 par session\n    if (submitCount >= 5) {\n      setStatus({\n        submitting: false,\n        success: false,\n        error: true,\n        message: 'Nombre maximum de soumissions atteint. Veuillez réessayer plus tard.'\n      });\n      return;\n    }\n    \n    setStatus({ submitting: true, success: false, error: false, message: '' });\n    \n    // Nettoyer les données avant l'envoi\n    const sanitizedData = {\n      name: sanitizeInput(formData.name),\n      email: sanitizeInput(formData.email),\n      phone: sanitizeInput(formData.phone),\n      subject: sanitizeInput(formData.subject),\n      message: sanitizeInput(formData.message)\n    };\n\n    // Remplacer les valeurs des champs du formulaire par les données nettoyées\n    const formElement = form.current;\n    formElement.querySelector('[name=\"name\"]').value = sanitizedData.name;\n    formElement.querySelector('[name=\"email\"]').value = sanitizedData.email;\n    formElement.querySelector('[name=\"phone\"]').value = sanitizedData.phone;\n    formElement.querySelector('[name=\"subject\"]').value = sanitizedData.subject;\n    formElement.querySelector('[name=\"message\"]').value = sanitizedData.message;\n    \n    emailjs.sendForm(\n      EMAILJS_SERVICE_ID, \n      EMAILJS_TEMPLATE_ID, \n      form.current, \n      EMAILJS_PUBLIC_KEY\n    )\n      .then((result) => {\n        setFormData({\n          name: '',\n          email: '',\n          phone: '',\n          subject: '',\n          message: ''\n        });\n        setStatus({\n          submitting: false,\n          success: true,\n          error: false,\n          message: 'Message envoyé avec succès!'\n        });\n        // Mettre à jour le compteur de soumissions et le temps de la dernière soumission\n        setSubmitCount(prev => prev + 1);\n        setLastSubmitTime(Date.now());\n      }, (error) => {\n        console.error('Erreur:', error);\n        setStatus({\n          submitting: false,\n          success: false,\n          error: true,\n          message: 'Une erreur est survenue. Veuillez réessayer.'\n        });\n      });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    // Limitation de la longueur des entrées pour prévenir les attaques par débordement\n    const maxLengths = {\n      name: 100,\n      email: 100,\n      phone: 20,\n      subject: 200,\n      message: 5000\n    };\n    \n    const truncatedValue = value.slice(0, maxLengths[name] || 100);\n    \n    setFormData(prev => ({\n      ...prev,\n      [name]: truncatedValue\n    }));\n    \n    // Réinitialiser l'erreur du champ modifié\n    setErrors(prev => ({\n      ...prev,\n      [name]: ''\n    }));\n  };\n\n  // Empêcher le stockage des données sensibles dans l'historique du navigateur\n  useEffect(() => {\n    return () => {\n      if (window.history.replaceState) {\n        window.history.replaceState(null, document.title, window.location.pathname);\n      }\n    };\n  }, []);\n\n  return (\n    <Layout>\n      <SEO \n        title=\"Contact\" \n        description=\"Contactez LATVIC pour vos besoins en sécurité en Guinée. Notre équipe d'experts est à votre écoute pour vous offrir des solutions personnalisées.\"\n      />\n      <div className=\"min-h-screen\">\n        {/* Hero Section */}\n        <div className=\"relative bg-black py-24 overflow-hidden\">\n          {/* Cercles décoratifs */}\n          <motion.div\n            initial={{ opacity: 0, scale: 0 }}\n            animate={{ opacity: 0.2, scale: 1 }}\n            transition={{ duration: 1 }}\n            className=\"absolute top-0 left-0 w-72 h-72 bg-red-600 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob\"\n          ></motion.div>\n          <motion.div\n            initial={{ opacity: 0, scale: 0 }}\n            animate={{ opacity: 0.2, scale: 1 }}\n            transition={{ duration: 1, delay: 0.2 }}\n            className=\"absolute top-0 right-0 w-72 h-72 bg-red-600 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-2000\"\n          ></motion.div>\n\n          <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            {/* Badge animé */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              className=\"inline-flex items-center px-4 py-2 bg-red-600/10 rounded-full text-red-600 backdrop-blur-sm border border-red-600/20 mb-8\"\n            >\n              <span className=\"w-2 h-2 bg-red-600 rounded-full mr-2\"></span>\n              <span className=\"text-sm font-medium\">Contactez-nous</span>\n            </motion.div>\n\n            <motion.h1\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.2 }}\n              className=\"text-5xl md:text-6xl font-extrabold text-white mb-6\"\n            >\n              Parlons de votre <span className=\"text-red-600\">sécurité</span>\n            </motion.h1>\n            <motion.p\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.4 }}\n              className=\"mt-4 text-xl text-gray-300 max-w-3xl mx-auto\"\n            >\n              Notre équipe d'experts est à votre écoute pour répondre à vos besoins\n            </motion.p>\n          </div>\n        </div>\n\n        {/* Section Formulaire et Contact */}\n        <section className=\"relative py-12 bg-white\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-start\">\n              {/* Colonne de gauche - Informations */}\n              <motion.div\n                initial={{ opacity: 0, x: -50 }}\n                whileInView={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.8 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"space-y-8 -mt-16\">\n                  {/* Logo en premier */}\n                  <motion.div\n                    initial={{ opacity: 0 }}\n                    whileInView={{ opacity: 1 }}\n                    transition={{ duration: 0.8, delay: 0.2 }}\n                    viewport={{ once: true }}\n                    className=\"relative\"\n                  >\n                    <motion.div\n                      className=\"absolute inset-0 bg-gradient-to-r from-red-600 to-gray-900 rounded-2xl opacity-10\"\n                    ></motion.div>\n                    <motion.img\n                      src=\"/images/logo.jpg\"\n                      alt=\"Localisation\"\n                      className=\"relative rounded-2xl w-full h-[400px] object-contain bg-white\"\n                    />\n                  </motion.div>\n\n                  {/* Info items */}\n                  <div className=\"space-y-4\">\n                    {/* Téléphone et Email sur la même ligne */}\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                      {/* Téléphone */}\n                      <div className=\"flex items-center space-x-4 p-3 rounded-xl bg-white shadow-sm\">\n                        <div className=\"flex-shrink-0 w-12 h-12 bg-red-600/10 rounded-lg flex items-center justify-center\">\n                          <svg className=\"w-6 h-6 text-red-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\n                          </svg>\n                        </div>\n                        <div>\n                          <p className=\"text-red-600 text-sm font-medium\">Téléphone</p>\n                          <p className=\"text-gray-900 font-medium whitespace-nowrap\">625-46-23-35/626-66-19-68</p>\n                        </div>\n                      </div>\n\n                      {/* Email */}\n                      <div className=\"flex items-center space-x-4 p-3 rounded-xl bg-white shadow-sm\">\n                        <div className=\"flex-shrink-0 w-12 h-12 bg-red-600/10 rounded-lg flex items-center justify-center\">\n                          <svg className=\"w-6 h-6 text-red-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                          </svg>\n                        </div>\n                        <div>\n                          <p className=\"text-red-600 text-sm font-medium\">Email</p>\n                          <p className=\"text-gray-900 font-medium\">latvicprotection@gmail.com</p>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Localisation */}\n                    <div className=\"flex items-center space-x-4 p-3 rounded-xl bg-white shadow-sm\">\n                      <div className=\"flex-shrink-0 w-12 h-12 bg-red-600/10 rounded-lg flex items-center justify-center\">\n                        <svg className=\"w-6 h-6 text-red-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                        </svg>\n                      </div>\n                      <div>\n                        <p className=\"text-red-600 text-sm font-medium\">Adresse</p>\n                        <a \n                          href=\"https://www.google.com/maps/place/Conakry,+Guinée\" \n                          target=\"_blank\" \n                          rel=\"noopener noreferrer\" \n                          className=\"text-gray-900 font-medium hover:text-red-600 transition-colors flex items-center group\"\n                        >\n                          Conakry, Guinée\n                          <svg className=\"w-4 h-4 ml-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n                          </svg>\n                        </a>\n                        <p className=\"text-sm text-gray-500 mt-1\">\n                          Cliquez pour ouvrir dans Google Maps\n                          <svg className=\"w-4 h-4 inline-block ml-1 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7l5 5m0 0l-5 5m5-5H6\" />\n                          </svg>\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n\n              {/* Colonne de droite - Formulaire */}\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                whileInView={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.8 }}\n                viewport={{ once: true }}\n                className=\"relative group\"\n              >\n                <motion.div\n                  whileHover={{ rotate: 2 }}\n                  className=\"absolute inset-0 bg-gradient-to-r from-red-600 to-gray-900 rounded-2xl transform rotate-1 opacity-10\"\n                ></motion.div>\n                <motion.div\n                  whileHover={{ rotate: -1 }}\n                  className=\"relative bg-white rounded-2xl shadow-xl p-8 transform -rotate-1\"\n                >\n                  {/* Message de statut */}\n                  {status.success && (\n                    <div className=\"mb-6 p-4 bg-green-50 border border-green-500 text-green-700 rounded-lg flex items-center\">\n                      <svg className=\"w-5 h-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      {status.message}\n                    </div>\n                  )}\n                  \n                  {status.error && (\n                    <div className=\"mb-6 p-4 bg-red-50 border border-red-500 text-red-700 rounded-lg flex items-center\">\n                      <svg className=\"w-5 h-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                      {status.message}\n                    </div>\n                  )}\n                  \n                  <form \n                    ref={form} \n                    onSubmit={handleSubmit} \n                    className=\"space-y-6\"\n                    aria-label=\"Formulaire de contact\"\n                  >\n                    <motion.div\n                      initial={{ opacity: 0, y: 20 }}\n                      whileInView={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.5 }}\n                      viewport={{ once: true }}\n                      className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\"\n                    >\n                      <div>\n                        <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n                          Nom complet *\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"name\"\n                          id=\"name\"\n                          required\n                          value={formData.name}\n                          onChange={handleChange}\n                          className=\"mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500 transition-colors\"\n                          placeholder=\"John Doe\"\n                          aria-describedby={errors.name ? \"name-error\" : undefined}\n                        />\n                        {errors.name && (\n                          <p id=\"name-error\" className=\"mt-1 text-sm text-red-600\">\n                            {errors.name}\n                          </p>\n                        )}\n                      </div>\n                      <div>\n                        <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                          Email *\n                        </label>\n                        <input\n                          type=\"email\"\n                          name=\"email\"\n                          id=\"email\"\n                          required\n                          value={formData.email}\n                          onChange={handleChange}\n                          className=\"mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500 transition-colors\"\n                          placeholder=\"john@example.com\"\n                          aria-describedby={errors.email ? \"email-error\" : undefined}\n                        />\n                        {errors.email && (\n                          <p id=\"email-error\" className=\"mt-1 text-sm text-red-600\">\n                            {errors.email}\n                          </p>\n                        )}\n                      </div>\n                    </motion.div>\n\n                    <div>\n                      <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700\">\n                        Téléphone\n                      </label>\n                      <input\n                        type=\"tel\"\n                        name=\"phone\"\n                        id=\"phone\"\n                        value={formData.phone}\n                        onChange={handleChange}\n                        className=\"mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500 transition-colors\"\n                        placeholder=\"625-46-23-35\"\n                      />\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"subject\" className=\"block text-sm font-medium text-gray-700\">\n                        Sujet *\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"subject\"\n                        id=\"subject\"\n                        required\n                        value={formData.subject}\n                        onChange={handleChange}\n                        className=\"mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500 transition-colors\"\n                        placeholder=\"Comment pouvons-nous vous aider ?\"\n                        aria-describedby={errors.subject ? \"subject-error\" : undefined}\n                      />\n                      {errors.subject && (\n                        <p id=\"subject-error\" className=\"mt-1 text-sm text-red-600\">\n                          {errors.subject}\n                        </p>\n                      )}\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700\">\n                        Message *\n                      </label>\n                      <textarea\n                        name=\"message\"\n                        id=\"message\"\n                        rows={4}\n                        required\n                        value={formData.message}\n                        onChange={handleChange}\n                        className=\"mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500 transition-colors\"\n                        placeholder=\"Décrivez votre besoin...\"\n                        aria-describedby={errors.message ? \"message-error\" : undefined}\n                      />\n                      {errors.message && (\n                        <p id=\"message-error\" className=\"mt-1 text-sm text-red-600\">\n                          {errors.message}\n                        </p>\n                      )}\n                    </div>\n\n                    <motion.button\n                      type=\"submit\"\n                      disabled={status.submitting}\n                      whileHover={{ scale: 1.02, y: -2 }}\n                      whileTap={{ scale: 0.98 }}\n                      className=\"w-full flex items-center justify-center px-8 py-4 text-lg font-semibold rounded-lg text-white bg-red-600 hover:bg-red-700 transition-all duration-300 disabled:opacity-70 disabled:cursor-not-allowed\"\n                    >\n                      {status.submitting ? 'Envoi en cours...' : 'Envoyer le message'}\n                      {!status.submitting && (\n                        <svg className=\"w-5 h-5 ml-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\n                        </svg>\n                      )}\n                    </motion.button>\n                  </form>\n                </motion.div>\n              </motion.div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </Layout>\n  );\n} "],"names":["EmailJSResponseStatus","constructor","_status","arguments","length","undefined","_text","this","status","text","store","origin","blockHeadless","storageProvider","createWebStorage","localStorage","get","key","Promise","resolve","getItem","set","value","setItem","remove","removeItem","buildOptions","options","publicKey","toString","sendPost","async","url","data","headers","response","fetch","method","body","message","responseStatus","ok","validateParams","serviceID","templateID","isHeadless","navigator","webdriver","languages","headlessError","isBlockedValueInParams","params","list","watchVariable","isBlockListDisabled","validateBlockListParams","Array","isArray","name","FormData","getValue","includes","blockedEmailError","isLimitRateHit","defaultID","storage","throttle","validateLimitRateParams","id","leftTime","lastTime","Number","Date","now","getLeftTime","limitRateError","init","opts","blockList","limitRate","send","templateParams","reject","validateTemplateParams","location","pathname","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","findHTMLForm","nodeName","validateForm","formData","append","EMAILJS_SERVICE_ID","process","EMAILJS_TEMPLATE_ID","EMAILJS_PUBLIC_KEY","Contact","setFormData","useState","email","phone","subject","errors","setErrors","setStatus","submitting","success","error","submitCount","setSubmitCount","lastSubmitTime","setLastSubmitTime","useRef","sanitizeInput","input","replace","handleChange","e","target","truncatedValue","slice","prev","useEffect","window","history","replaceState","title","_jsxs","Layout","children","_jsx","SEO","description","className","motion","div","initial","opacity","scale","animate","transition","duration","delay","y","h1","p","x","whileInView","viewport","once","img","src","alt","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","href","rel","whileHover","rotate","ref","onSubmit","preventDefault","isValid","newErrors","trim","test","sanitizedData","formElement","current","emailjs","then","result","console","htmlFor","type","required","onChange","placeholder","rows","button","disabled","whileTap"],"sourceRoot":""}